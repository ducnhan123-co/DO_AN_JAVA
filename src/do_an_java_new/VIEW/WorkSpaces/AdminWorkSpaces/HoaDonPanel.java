/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package do_an_java_new.VIEW.WorkSpaces.AdminWorkSpaces;

import do_an_java_new.BLL.ChiTietHoaDonBLL;
import do_an_java_new.ExcelExporter;
import do_an_java_new.ExcelImporter;
import do_an_java_new.BLL.HangBLL;
import do_an_java_new.BLL.HoaDonBLL;
import do_an_java_new.DTO.ChiTietHoaDonDTO;
import do_an_java_new.DTO.HangDTO;
import do_an_java_new.DTO.HoaDonDTO;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import do_an_java_new.BLL.KhuyenMaiBLL;
import do_an_java_new.DTO.KhuyenMaiDTO;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.sql.Date;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pducn
 */
public class HoaDonPanel extends javax.swing.JPanel {

    /**
     * Creates new form NhanVienPanel
     */
    public HoaDonPanel() {
        initComponents();
        advancedSearch.setVisible(false);
        
        renderTable();
        ((DefaultTableModel)tbChiTietHoaDon.getModel()).setRowCount(0);
    }
    
    public void renderTable() {
        try {
            int sortOption = cbbSortOption.getSelectedIndex();
            String keyWord = txtKeyWord.getText().trim();
            ArrayList<HoaDonDTO> dsHoaDon = null;
            
            if (!advancedSearch.isVisible()) {
                dsHoaDon = HoaDonBLL.getDanhSachHoaDon(sortOption, keyWord);
            } else {
                Date 
                        ngayBD,
                        ngayKT;
                
                if (thoiGianBD.getDate() == null)
                    ngayBD = null;
                else 
                    ngayBD = new Date(thoiGianBD.getDate().getTime());
                if (thoiGianKT.getDate() == null)
                    ngayKT = null;
                else 
                    ngayKT = new Date(thoiGianBD.getDate().getTime());
                
                String maNV = txtNV.getText();
                int 
                        tienbd = (int) tienBD.getValue(),
                        tienkt = (int) tienKT.getValue(),
                        giambd = (int) giamBD.getValue(),
                        giamkt = (int) giamKT.getValue();
                
                dsHoaDon = new ArrayList<>();
                for (HoaDonDTO hoaDon: HoaDonBLL.getDanhSachHoaDon(sortOption, keyWord)) {
                    Date ngayHoaDon = hoaDon.getThoiGian();

                    if (ngayBD != null && ngayHoaDon.before(ngayBD)) continue;
                    if (ngayKT != null && ngayHoaDon.after(ngayKT)) continue;

                    if (!maNV.isEmpty() && !hoaDon.getMaNV().equals(maNV)) continue;

                    if (hoaDon.getTongTien() < tienbd || hoaDon.getTongTien() > tienkt) continue;
                    if (hoaDon.getTienGiam() < giambd || hoaDon.getTienGiam() > giamkt) continue;

                    
                    dsHoaDon.add(hoaDon);
                }
            }
            
            txtResultCount.setText(String.format("Tìm thấy %d kết quả", dsHoaDon.size()));
            
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            
            for (HoaDonDTO hoaDon: dsHoaDon) {
                model.addRow(new Object[] {
                    hoaDon.getMaHD(),
                    hoaDon.getMaKH(),
                    hoaDon.getMaNV(),
                    hoaDon.getTongTien(),
                    hoaDon.getTienGiam(),
                    hoaDon.getThoiGian(),
                    hoaDon.getMaKM()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnInsert = new javax.swing.JLabel();
        btnDelete = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JLabel();
        btnDetail = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        filterPanel = new javax.swing.JPanel();
        cbbSortOption = new javax.swing.JComboBox<>();
        txtKeyWord = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        txtResultCount = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        advancedSearch = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        thoiGianBD = new com.toedter.calendar.JDateChooser();
        thoiGianKT = new com.toedter.calendar.JDateChooser();
        jPanel12 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        txtNV = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tienBD = new javax.swing.JSpinner();
        tienKT = new javax.swing.JSpinner();
        jPanel11 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        giamBD = new javax.swing.JSpinner();
        giamKT = new javax.swing.JSpinner();
        jPanel9 = new javax.swing.JPanel();
        btnReset1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbChiTietHoaDon = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        txtMaHD = new javax.swing.JTextField();
        txtMaKh = new javax.swing.JTextField();
        txtMaNV = new javax.swing.JTextField();
        txtTongTien = new javax.swing.JTextField();
        txtThoiGian = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(0, 0));
        setMinimumSize(new java.awt.Dimension(1080, 800));
        setPreferredSize(new java.awt.Dimension(1080, 240));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(0, 173, 59));
        jPanel1.setMaximumSize(new java.awt.Dimension(0, 0));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(976, 97));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        btnInsert.setBackground(new java.awt.Color(255, 255, 255));
        btnInsert.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        btnInsert.setForeground(new java.awt.Color(255, 255, 255));
        btnInsert.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Add.png"))); // NOI18N
        btnInsert.setText("Thêm");
        btnInsert.setToolTipText("");
        btnInsert.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInsert.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(btnInsert, gridBagConstraints);

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Delete.png"))); // NOI18N
        btnDelete.setText("Xoá");
        btnDelete.setToolTipText("");
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(btnDelete, gridBagConstraints);

        btnUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Pencil.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.setToolTipText("");
        btnUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(btnUpdate, gridBagConstraints);

        btnDetail.setBackground(new java.awt.Color(255, 255, 255));
        btnDetail.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnDetail.setForeground(new java.awt.Color(255, 255, 255));
        btnDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/pdf1.png"))); // NOI18N
        btnDetail.setText("In PDF");
        btnDetail.setToolTipText("");
        btnDetail.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDetail.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExportPDF(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(btnDetail, gridBagConstraints);

        jLabel29.setBackground(new java.awt.Color(255, 255, 255));
        jLabel29.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Google Sheets.png"))); // NOI18N
        jLabel29.setText("Xuất excel");
        jLabel29.setToolTipText("");
        jLabel29.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel29.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel29MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel29, gridBagConstraints);

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Document.png"))); // NOI18N
        jLabel30.setText("Nhập excel");
        jLabel30.setToolTipText("");
        jLabel30.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel30.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel30, gridBagConstraints);

        filterPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        filterPanel.setLayout(new java.awt.GridBagLayout());

        cbbSortOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none", "Giá tăng dần", "Giá giảm dần", "Thời gian ↑", "Thời gian ↓" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        filterPanel.add(cbbSortOption, gridBagConstraints);

        txtKeyWord.setMinimumSize(new java.awt.Dimension(148, 22));
        txtKeyWord.setPreferredSize(new java.awt.Dimension(140, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        filterPanel.add(txtKeyWord, gridBagConstraints);

        btnRefresh.setText("Refresh");
        btnRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRefreshMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        filterPanel.add(btnRefresh, gridBagConstraints);

        txtResultCount.setText("Tìm thấy ... kết quả");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        filterPanel.add(txtResultCount, gridBagConstraints);

        btnReset.setText("Đặt lại");
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        filterPanel.add(btnReset, gridBagConstraints);

        jButton1.setText("Tìm nâng cao");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 2;
        filterPanel.add(jButton1, gridBagConstraints);

        jLabel6.setText("Mã");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        filterPanel.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 0, 0);
        jPanel1.add(filterPanel, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        advancedSearch.setPreferredSize(new java.awt.Dimension(300, 120));
        advancedSearch.setLayout(new javax.swing.BoxLayout(advancedSearch, javax.swing.BoxLayout.Y_AXIS));

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel8.setMaximumSize(new java.awt.Dimension(32767, 80));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("từ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel8.add(jLabel10, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("đến");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel8.add(jLabel11, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Thời gian");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel8.add(jLabel12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel8.add(thoiGianBD, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel8.add(thoiGianKT, gridBagConstraints);

        advancedSearch.add(jPanel8);

        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel12.setMaximumSize(new java.awt.Dimension(32767, 70));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Mã nhân viên     ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel12.add(jLabel21, gridBagConstraints);

        txtNV.setPreferredSize(new java.awt.Dimension(100, 26));
        jPanel12.add(txtNV, new java.awt.GridBagConstraints());

        advancedSearch.add(jPanel12);

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel10.setMaximumSize(new java.awt.Dimension(32767, 80));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("từ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel10.add(jLabel13, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("đến");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel10.add(jLabel14, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Tổng tiền");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jLabel15, gridBagConstraints);

        tienBD.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 100000));
        tienBD.setPreferredSize(new java.awt.Dimension(100, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel10.add(tienBD, gridBagConstraints);

        tienKT.setModel(new javax.swing.SpinnerNumberModel(100000000, 0, null, 100000));
        tienKT.setPreferredSize(new java.awt.Dimension(100, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel10.add(tienKT, gridBagConstraints);

        advancedSearch.add(jPanel10);

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel11.setMaximumSize(new java.awt.Dimension(32767, 80));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("từ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel11.add(jLabel16, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("đến");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanel11.add(jLabel17, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Tiền giảm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel11.add(jLabel18, gridBagConstraints);

        giamBD.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 100000));
        giamBD.setPreferredSize(new java.awt.Dimension(100, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel11.add(giamBD, gridBagConstraints);

        giamKT.setModel(new javax.swing.SpinnerNumberModel(100000000, 0, null, 100000));
        giamKT.setPreferredSize(new java.awt.Dimension(100, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel11.add(giamKT, gridBagConstraints);

        advancedSearch.add(jPanel11);

        jPanel9.setMaximumSize(new java.awt.Dimension(32767, 40));

        btnReset1.setText("Đặt lại");
        btnReset1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReset1MouseClicked(evt);
            }
        });
        jPanel9.add(btnReset1);

        advancedSearch.add(jPanel9);

        add(advancedSearch, java.awt.BorderLayout.EAST);

        jPanel2.setLayout(new java.awt.BorderLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hoá đơn", "Mã khách hàng", "Mã nhân viên", "Tổng tiền", "Tiền giảm", "Thời gian", "Khuyến mãi"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setMaximumSize(new java.awt.Dimension(2147483647, 500));
        jPanel3.setPreferredSize(new java.awt.Dimension(456, 300));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setBackground(new java.awt.Color(232, 245, 233));

        tbChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã hàng", "Tên sản phẩm", "Số lượng", "Đơn giá"
            }
        ));
        jScrollPane2.setViewportView(tbChiTietHoaDon);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel4.setBackground(new java.awt.Color(153, 255, 153));
        jPanel4.setToolTipText("");
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 52));
        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {0, 10, 0, 10, 0};
        jPanel4Layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        jPanel4.setLayout(jPanel4Layout);

        txtMaHD.setEditable(false);
        txtMaHD.setMinimumSize(new java.awt.Dimension(100, 26));
        txtMaHD.setName(""); // NOI18N
        txtMaHD.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel4.add(txtMaHD, gridBagConstraints);

        txtMaKh.setEditable(false);
        txtMaKh.setMinimumSize(new java.awt.Dimension(100, 26));
        txtMaKh.setName(""); // NOI18N
        txtMaKh.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        jPanel4.add(txtMaKh, gridBagConstraints);

        txtMaNV.setEditable(false);
        txtMaNV.setMinimumSize(new java.awt.Dimension(100, 26));
        txtMaNV.setName(""); // NOI18N
        txtMaNV.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        jPanel4.add(txtMaNV, gridBagConstraints);

        txtTongTien.setEditable(false);
        txtTongTien.setMinimumSize(new java.awt.Dimension(100, 26));
        txtTongTien.setName(""); // NOI18N
        txtTongTien.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        jPanel4.add(txtTongTien, gridBagConstraints);

        txtThoiGian.setEditable(false);
        txtThoiGian.setMinimumSize(new java.awt.Dimension(100, 26));
        txtThoiGian.setName(""); // NOI18N
        txtThoiGian.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        jPanel4.add(txtThoiGian, gridBagConstraints);

        jLabel1.setText("Mã hoá đơn");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel4.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Mã khách hàng");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel4.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Mã nhân viên");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel4.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Tổng tiền");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        jPanel4.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Thời gian");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        jPanel4.add(jLabel5, gridBagConstraints);

        jPanel3.add(jPanel4, java.awt.BorderLayout.WEST);

        jPanel2.add(jPanel3, java.awt.BorderLayout.SOUTH);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_btnInsertMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked

    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        // TODO add your handling code here:
        txtKeyWord.setText("");
        cbbSortOption.setSelectedIndex(0);
        buttonGroup.clearSelection();
    }//GEN-LAST:event_btnResetMouseClicked

    private void btnRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRefreshMouseClicked
        // TODO add your handling code here:
        renderTable();
        txtMaHD.setText("");
        txtMaKh.setText("");
        txtMaNV.setText("");
        txtTongTien.setText("");
        txtThoiGian.setText("");
        ((DefaultTableModel)tbChiTietHoaDon.getModel()).setRowCount(0);
    }//GEN-LAST:event_btnRefreshMouseClicked

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        
        String mahd = (String) table.getValueAt(selectedRow, 0);
        String makh = (String) table.getValueAt(selectedRow, 1);
        String manv = (String) table.getValueAt(selectedRow, 2);
        int tongTien = (int) table.getValueAt(selectedRow, 3);
        int tienGiam = (int) table.getValueAt(selectedRow, 4);
        Date thoiGian = (Date) table.getValueAt(selectedRow, 5);
        
        txtMaHD.setText(mahd);
        txtMaKh.setText(makh);
        txtMaNV.setText(manv);
        txtTongTien.setText(String.valueOf(tongTien-tienGiam));
        txtThoiGian.setText(thoiGian.toString());
        
        ArrayList<ChiTietHoaDonDTO> dsCTHD  = null;
        try {
            dsCTHD = ChiTietHoaDonBLL.getCTHD(mahd);
        } catch (SQLException ex) {
            Logger.getLogger(HoaDonPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultTableModel model = (DefaultTableModel) tbChiTietHoaDon.getModel();
        model.setRowCount(0);
        
        try {
            for (ChiTietHoaDonDTO cthd: dsCTHD) {
                HangDTO hang = HangBLL.timHang(cthd.getMaHang());
                model.addRow(new Object[] {
                    cthd.getMaHang(),
                    hang.getTenSP(),
                    cthd.getSoLuong(),
                    cthd.getDonGia()
                });
            }            
        } catch (Exception e) {
            e.printStackTrace();
        }
 
    }//GEN-LAST:event_tableMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Chọn hoá đơn muốn xoá");
            return;
        } 
        
        if (JOptionPane.showConfirmDialog(null, "Bạn thật sự muốn xoá hoá đơn?", "Xoá hoá đơn", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                String maHD = (String) table.getValueAt(selectedRow, 0);
                
                ChiTietHoaDonBLL.xoaHoaDon(maHD);
                HoaDonBLL.xoaHoaDon(maHD);
                
                JOptionPane.showMessageDialog(null, "Xoá hoá đơn thành công");
                renderTable();
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }        
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void jLabel29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn nơi lưu file Excel");
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel Files", "xlsx"));

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            if (!filePath.endsWith(".xlsx")) {
                filePath += ".xlsx";
            }

            try {
                // Gọi lớp ExcelExporter để xuất dữ liệu
                ExcelExporter.exportToExcel(table, "Danh sách hóa đơn", filePath);
                JOptionPane.showMessageDialog(this, "Xuất file Excel thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi xuất file Excel: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jLabel29MouseClicked

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn file Excel để nhập");
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel Files", "xlsx"));

        int userSelection = fileChooser.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();

            try {
                // Đọc dữ liệu từ file Excel
                List<List<String>> data = ExcelImporter.importFromExcel(filePath);

                // Lưu dữ liệu vào database
                for (int i = 1; i < data.size(); i++) { // Bỏ qua dòng tiêu đề
                    List<String> row = data.get(i);
                    String maHD = row.get(0);
                    String maKH = row.get(1);
                    String maNV = row.get(2);
                    double tongTien = Double.parseDouble(row.get(3));
                    double tienGiam = Double.parseDouble(row.get(4));
                    String thoiGian = row.get(5);
                    String maKM = row.get(6);

                    // Gọi BLL để lưu vào database
                    HoaDonBLL.themHoaDon(new HoaDonDTO(maHD, maKH, maNV, (int) tongTien,(int) tienGiam, Date.valueOf(thoiGian), maKM));
                }

                JOptionPane.showMessageDialog(this, "Nhập dữ liệu từ Excel thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                renderTable(); // Refresh lại bảng
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi nhập dữ liệu từ Excel: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jLabel30MouseClicked
    
    // Hàm In Hóa Đơn PDF 
    private void btnExportPDF(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExportPDF
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                // Lấy thông tin hóa đơn từ bảng
                String maHD = table.getValueAt(selectedRow, 0).toString();
                String maKH = table.getValueAt(selectedRow, 1).toString();
                String maNV = table.getValueAt(selectedRow, 2).toString();
                String tongTien = table.getValueAt(selectedRow, 3).toString();
                String tienGiam = table.getValueAt(selectedRow, 4).toString();
                String thoiGian = table.getValueAt(selectedRow, 5).toString();
                String maKM = table.getValueAt(selectedRow, 6).toString();

                // Lấy thông tin chi tiết hóa đơn
                ArrayList<ChiTietHoaDonDTO> dsCTHD = ChiTietHoaDonBLL.getCTHD(maHD);

                // Chọn nơi lưu file PDF
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Lưu file PDF");
                int userSelection = fileChooser.showSaveDialog(this);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    String filePath = fileChooser.getSelectedFile().getAbsolutePath() + ".pdf";

                    // Tạo nội dung PDF
                    Document document = new Document();
                    PdfWriter.getInstance(document, new FileOutputStream(filePath));
                    document.open();

                    // Font hỗ trợ tiếng Việt
                    BaseFont baseFont = BaseFont.createFont("lib/arial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    Font titleFont = new Font(baseFont, 16, Font.BOLD);
                    Font normalFont = new Font(baseFont, 12, Font.NORMAL);
                    Font totalFont = new Font(baseFont, 12, Font.BOLD);

                    // Tiêu đề hóa đơn
                    Paragraph title = new Paragraph("CỬA HÀNG THỰC PHẨM\nHóa Đơn Bán Hàng", titleFont);
                    title.setAlignment(Element.ALIGN_CENTER);
                    document.add(title);

                    document.add(Chunk.NEWLINE);

                    // Thông tin hóa đơn
                    document.add(new Paragraph("Mã hóa đơn: " + maHD, normalFont));
                    document.add(new Paragraph("Ngày lập: " + thoiGian, normalFont));
                    document.add(new Paragraph("Nhân viên: " + maNV, normalFont));
                    document.add(new Paragraph("Khách hàng: " + maKH, normalFont));
                    document.add(new Paragraph("Khuyến mãi: " + maKM, normalFont));

                    document.add(Chunk.NEWLINE);

                    // Bảng danh sách sản phẩm
                    PdfPTable tablePDF = new PdfPTable(5);
                    Paragraph productTitle = new Paragraph("\nDANH SÁCH SẢN PHẨM MUA", titleFont);
                    productTitle.setAlignment(com.itextpdf.text.Element.ALIGN_CENTER);
                    document.add(productTitle);
                    tablePDF.setWidthPercentage(100);
                    tablePDF.setSpacingBefore(10f);
                    tablePDF.setSpacingAfter(10f);

                    // Tiêu đề cột
                    String[] headers = {"Tên sản phẩm", "Số lượng", "Đơn giá", "Giảm giá", "Thành tiền"};
                    for (String header : headers) {
                        PdfPCell cell = new PdfPCell(new Phrase(header, normalFont));
                        cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
                        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                        tablePDF.addCell(cell);
                    }

                    // Dữ liệu chi tiết hóa đơn
                    for (ChiTietHoaDonDTO cthd : dsCTHD) {
                        HangDTO hang = HangBLL.timHang(cthd.getMaHang());
                        KhuyenMaiDTO khuyenMai = KhuyenMaiBLL.timKhuyenMai(maKM); // Lấy thông tin khuyến mãi

                        int giamGia = khuyenMai != null ? khuyenMai.getGiaTri() : 0;
                        double thanhTien = cthd.getSoLuong() * cthd.getDonGia() * (1 - giamGia / 100);

                        tablePDF.addCell(new PdfPCell(new Phrase(hang.getTenSP(), normalFont)));
                        tablePDF.addCell(new PdfPCell(new Phrase(String.valueOf(cthd.getSoLuong()), normalFont)));
                        tablePDF.addCell(new PdfPCell(new Phrase(String.format("%,.0f VNĐ", (double) cthd.getDonGia()), normalFont)));
                        tablePDF.addCell(new PdfPCell(new Phrase(String.format("%d%%", giamGia), normalFont)));
                        tablePDF.addCell(new PdfPCell(new Phrase(String.format("%,.0f VNĐ", thanhTien), normalFont)));
                    }

                    document.add(tablePDF);

                    // Tổng tiền
                    Paragraph total = new Paragraph("Tổng tiền: " +tongTien + " VNĐ", totalFont);
                    total.add(new Chunk("\nTiền giảm: "+tienGiam+" VNĐ", totalFont));
                    int tienTra = Integer.parseInt(tongTien) - Integer.parseInt(tienGiam);
                    total.add(new Chunk("\nTổng tiền phải trả: "+tienTra+" VNĐ", totalFont));
                    total.setAlignment(Element.ALIGN_RIGHT);
                    document.add(total);

                    document.add(Chunk.NEWLINE);

                    // Lời cảm ơn
                    Paragraph thankYou = new Paragraph("XIN CẢM ƠN QUÝ KHÁCH!", titleFont);
                    thankYou.setAlignment(Element.ALIGN_CENTER);
                    document.add(thankYou);

                    // Đóng tài liệu
                    document.close();

                    JOptionPane.showMessageDialog(this, "Xuất file PDF thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi tạo PDF: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hóa đơn để in PDF!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnExportPDF

    private void btnReset1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReset1MouseClicked
        // TODO add your handling code here:
        tienBD.setValue(0);
        tienKT.setValue(100000000);
        giamBD.setValue(0);
        giamKT.setValue(100000000);
        thoiGianBD.setDate(null);
        thoiGianKT.setDate(null);
    }//GEN-LAST:event_btnReset1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        advancedSearch.setVisible(!advancedSearch.isVisible());
    }//GEN-LAST:event_jButton1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel advancedSearch;
    private javax.swing.JLabel btnDelete;
    private javax.swing.JLabel btnDetail;
    private javax.swing.JLabel btnInsert;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReset1;
    private javax.swing.JLabel btnUpdate;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> cbbSortOption;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JSpinner giamBD;
    private javax.swing.JSpinner giamKT;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    private javax.swing.JTable tbChiTietHoaDon;
    private com.toedter.calendar.JDateChooser thoiGianBD;
    private com.toedter.calendar.JDateChooser thoiGianKT;
    private javax.swing.JSpinner tienBD;
    private javax.swing.JSpinner tienKT;
    private javax.swing.JTextField txtKeyWord;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaKh;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtNV;
    private javax.swing.JLabel txtResultCount;
    private javax.swing.JTextField txtThoiGian;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
