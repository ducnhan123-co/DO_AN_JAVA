/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package do_an_java_new.VIEW.WorkSpaces.AdminWorkSpaces;

import do_an_java_new.BLL.ChiTietNhapHangBLL;
import do_an_java_new.ExcelExporter;
import do_an_java_new.ExcelImporter;
import do_an_java_new.BLL.HangBLL;
import do_an_java_new.BLL.NhapHangBLL;
import do_an_java_new.DTO.ChiTietNhapHangDTO;
import do_an_java_new.DTO.HangDTO;
import do_an_java_new.DTO.NhapHangDTO;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Date;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JFileChooser;

/**
 *
 * @author pducn
 */
public class NhapHangPanel extends javax.swing.JPanel {

    /**
     * Creates new form NhanVienPanel
     */
    public NhapHangPanel() {
        initComponents();
        
        renderTable();
        ((DefaultTableModel)tbChiTietNhapHang.getModel()).setRowCount(0);
    }
    
    public void renderTable() {
        try {
            int sortOption = cbbSortOption.getSelectedIndex();
            String keyWord = txtKeyWord.getText().trim();
            int searchOption = 0;
            searchOption = searchOption_ma.isSelected() ? 1 : searchOption_ncc.isSelected() ? 2 : 3 ;

            ArrayList<NhapHangDTO> dsNhapHang = NhapHangBLL.getDanhSachNhapHang(sortOption, searchOption, keyWord);
            
            txtResultCount.setText(String.format("Tìm thấy %d kết quả", dsNhapHang.size()));
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            for (NhapHangDTO nh: dsNhapHang) 
                model.addRow(new Object[]{
                    nh.getMaPhieu(),
                    nh.getMaNCC(),
                    nh.getMaNV(),
                    nh.getTongTien(),
                    nh.getThoiGian()
                });
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnInsert = new javax.swing.JLabel();
        btnDelete = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JLabel();
        btnExportPDF = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cbbSortOption = new javax.swing.JComboBox<>();
        txtKeyWord = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        txtResultCount = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        searchOption_nv = new javax.swing.JRadioButton();
        searchOption_ncc = new javax.swing.JRadioButton();
        searchOption_ma = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbChiTietNhapHang = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        txtMaNH = new javax.swing.JTextField();
        txtMaNCC = new javax.swing.JTextField();
        txtMaNV = new javax.swing.JTextField();
        txtTongTien = new javax.swing.JTextField();
        txtThoiGian = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(0, 0));
        setMinimumSize(new java.awt.Dimension(1080, 800));
        setPreferredSize(new java.awt.Dimension(1080, 800));
        setLayout(new java.awt.BorderLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã phiếu", "Mã nhà cung cấp", "Mã nhân viên nhập", "Tổng tiền", "Thời gian"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(0, 173, 59));
        jPanel1.setMaximumSize(new java.awt.Dimension(0, 0));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(976, 97));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        btnInsert.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        btnInsert.setForeground(new java.awt.Color(255, 255, 255));
        btnInsert.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Add.png"))); // NOI18N
        btnInsert.setText("Thêm");
        btnInsert.setToolTipText("");
        btnInsert.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInsert.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(btnInsert, gridBagConstraints);

        btnDelete.setFont(new java.awt.Font("Trebuchet MS", 1, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Delete.png"))); // NOI18N
        btnDelete.setText("Xoá");
        btnDelete.setToolTipText("");
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(btnDelete, gridBagConstraints);

        btnUpdate.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Pencil.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.setToolTipText("");
        btnUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(btnUpdate, gridBagConstraints);

        btnExportPDF.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnExportPDF.setForeground(new java.awt.Color(255, 255, 255));
        btnExportPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/pdf1.png"))); // NOI18N
        btnExportPDF.setText("In PDF");
        btnExportPDF.setToolTipText("");
        btnExportPDF.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExportPDF.setMaximumSize(new java.awt.Dimension(79, 87));
        btnExportPDF.setMinimumSize(new java.awt.Dimension(79, 87));
        btnExportPDF.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExportPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExportPDFMouseClicked(evt);
            }
        });
        jPanel1.add(btnExportPDF, new java.awt.GridBagConstraints());

        jLabel29.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Google Sheets.png"))); // NOI18N
        jLabel29.setText("Xuất excel");
        jLabel29.setToolTipText("");
        jLabel29.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel29.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel29MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel29, gridBagConstraints);

        jLabel30.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/do_an_java_new/Resources/Document.png"))); // NOI18N
        jLabel30.setText("Nhập excel");
        jLabel30.setToolTipText("");
        jLabel30.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel30.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel1.add(jLabel30, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        cbbSortOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none", "Tổng tiền tăng dần", "Tổng tiền giảm dần", "Thời gian ↑", "thời gian ↓" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(cbbSortOption, gridBagConstraints);

        txtKeyWord.setMinimumSize(new java.awt.Dimension(148, 22));
        txtKeyWord.setPreferredSize(new java.awt.Dimension(140, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(txtKeyWord, gridBagConstraints);

        btnRefresh.setText("Refresh");
        btnRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRefreshMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(btnRefresh, gridBagConstraints);

        txtResultCount.setText("Tìm thấy ... kết quả");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        jPanel2.add(txtResultCount, gridBagConstraints);

        btnReset.setText("Đặt lại");
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        jPanel2.add(btnReset, gridBagConstraints);

        buttonGroup.add(searchOption_nv);
        searchOption_nv.setText("Mã nhân viên");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 1;
        jPanel2.add(searchOption_nv, gridBagConstraints);

        buttonGroup.add(searchOption_ncc);
        searchOption_ncc.setText("Mã nhà cùng cấp");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 1;
        jPanel2.add(searchOption_ncc, gridBagConstraints);

        buttonGroup.add(searchOption_ma);
        searchOption_ma.setText("Mã phiếu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 1;
        jPanel2.add(searchOption_ma, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 60, 0, 0);
        jPanel1.add(jPanel2, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel3.setPreferredSize(new java.awt.Dimension(1000, 300));
        jPanel3.setLayout(new java.awt.BorderLayout());

        tbChiTietNhapHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã hàng", "Tên sản phẩm", "Số lượng", "Đơn giá"
            }
        ));
        jScrollPane2.setViewportView(tbChiTietNhapHang);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel4.setBackground(new java.awt.Color(153, 255, 153));
        jPanel4.setPreferredSize(new java.awt.Dimension(300, 52));
        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {0, 10, 0, 10, 0};
        jPanel4Layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        jPanel4.setLayout(jPanel4Layout);

        txtMaNH.setEditable(false);
        txtMaNH.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel4.add(txtMaNH, gridBagConstraints);

        txtMaNCC.setEditable(false);
        txtMaNCC.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        jPanel4.add(txtMaNCC, gridBagConstraints);

        txtMaNV.setEditable(false);
        txtMaNV.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        jPanel4.add(txtMaNV, gridBagConstraints);

        txtTongTien.setEditable(false);
        txtTongTien.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        jPanel4.add(txtTongTien, gridBagConstraints);

        txtThoiGian.setEditable(false);
        txtThoiGian.setPreferredSize(new java.awt.Dimension(130, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        jPanel4.add(txtThoiGian, gridBagConstraints);

        jLabel1.setText("Mã phiếu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel4.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Mã nhà cung cấp");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel4.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Mã nhân viên");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel4.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Tổng tiền");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        jPanel4.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Thời gian");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        jPanel4.add(jLabel5, gridBagConstraints);

        jPanel3.add(jPanel4, java.awt.BorderLayout.WEST);

        add(jPanel3, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnInsertMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked

    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        // TODO add your handling code here:
        txtKeyWord.setText("");
        cbbSortOption.setSelectedIndex(0);
        buttonGroup.clearSelection();
    }//GEN-LAST:event_btnResetMouseClicked

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        
        String manh = (String) table.getValueAt(selectedRow, 0);
        String mancc = (String) table.getValueAt(selectedRow, 1);
        String manv = (String) table.getValueAt(selectedRow, 2);
        int tongTien = (int) table.getValueAt(selectedRow, 3);
        Date thoiGian = (Date) table.getValueAt(selectedRow, 4);
                
        ArrayList<ChiTietNhapHangDTO> dsCTNH  = null;
        try {
            dsCTNH = ChiTietNhapHangBLL.getCTNH(manh);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, exception.getMessage());
        }
        
        txtMaNH.setText(manh);
        txtMaNCC.setText(mancc);
        txtMaNV.setText(manv);
        txtTongTien.setText(String.format("%d", tongTien));
        txtThoiGian.setText(thoiGian.toString());
        
        DefaultTableModel model = (DefaultTableModel) tbChiTietNhapHang.getModel();
        model.setRowCount(0);
        
        try {
            for (ChiTietNhapHangDTO ctnh: dsCTNH) {
                HangDTO hang = HangBLL.timHang(ctnh.getMaHang());
                model.addRow(new Object[] {
                    ctnh.getMaHang(),
                    hang.getTenSP(),
                    ctnh.getSoLuong(),
                    ctnh.getDonGia()
                });
            }
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_tableMouseClicked

    private void btnRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRefreshMouseClicked
        // TODO add your handling code here:
        renderTable();
        txtMaNH.setText("");
        txtMaNCC.setText("");
        txtMaNV.setText("");
        txtTongTien.setText("");
        txtThoiGian.setText("");
        ((DefaultTableModel) tbChiTietNhapHang.getModel()).setRowCount(0);
    }//GEN-LAST:event_btnRefreshMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Chọn phiếu nhập hàng muốn xoá");
            return;
        } 
        
        if (JOptionPane.showConfirmDialog(null, "Bạn thật sự muốn xoá phiếu nhập hàng?", "Xoá phiếu nhập hàng", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                String maPN = (String) table.getValueAt(selectedRow, 0);
                
                ChiTietNhapHangBLL.xoaPhieuNhap(maPN);
                NhapHangBLL.xoaPhieuNhap(maPN);
                
                JOptionPane.showMessageDialog(null, "Xoá phiếu nhập hàng thành công");
                renderTable();
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }        
        
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void jLabel29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseClicked
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setDialogTitle("Chọn nơi lưu file Excel");
        jf.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel Files", "xlsx"));
        
        int userSelection = jf.showSaveDialog(this);
        if(userSelection == JFileChooser.APPROVE_OPTION) {
            String filePath = jf.getSelectedFile().getAbsolutePath();
            if(!filePath.endsWith(".xlsx")) {
                filePath+=".xlsx";
            }
            try {
                ExcelExporter.exportToExcel(table, "Danh sách hàng nhập", filePath);
                JOptionPane.showMessageDialog(this, "Xuất file Excel thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } catch(Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi xuất file Excel: "+e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);  
            }
        }
    }//GEN-LAST:event_jLabel29MouseClicked

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setDialogTitle("Chọn file Excel để nhập");
        jf.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel Files", "xlsx"));
        
        int userSelection = jf.showOpenDialog(this);
        if(userSelection == JFileChooser.APPROVE_OPTION) {
            String filePath = jf.getSelectedFile().getAbsolutePath();
            
            try {
                List<List<String>> data = ExcelImporter.importFromExcel(filePath);
                
                for(int i=1 ; i<data.size(); i++) {
                    List<String> row = data.get(i);
                    String maPhieu = row.get(0);
                    String maNCC = row.get(1);
                    String maNV = row.get(2);
                    int tongTien = Integer.parseInt(row.get(3));
                    Date thoiGian = Date.valueOf(row.get(4));
                    
                    NhapHangBLL.themNhapHang(new NhapHangDTO(maPhieu, maNCC, maNV, tongTien, thoiGian));
                }
                
                JOptionPane.showMessageDialog(this, "Nhập dữ liệu từ Excel thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                renderTable();
            } catch(IOException e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi đọc file Excel: " +e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            } catch(Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi xử lý dữ liệu: "+e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jLabel30MouseClicked

    private void btnExportPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExportPDFMouseClicked
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                // Lấy thông tin phiếu nhập hàng từ bảng
                String maPhieu = table.getValueAt(selectedRow, 0).toString();
                String maNCC = table.getValueAt(selectedRow, 1).toString();
                String maNV = table.getValueAt(selectedRow, 2).toString();
                String tongTien = table.getValueAt(selectedRow, 3).toString();
                String thoiGian = table.getValueAt(selectedRow, 4).toString();

                // Lấy thông tin chi tiết nhập hàng
                ArrayList<ChiTietNhapHangDTO> dsCTNH = ChiTietNhapHangBLL.getCTNH(maPhieu);

                // Chọn nơi lưu file PDF
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Lưu file PDF");
                int userSelection = fileChooser.showSaveDialog(this);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                    String filePath = fileChooser.getSelectedFile().getAbsolutePath() + ".pdf";

                    // Tạo nội dung PDF
                    Document document = new Document();
                    PdfWriter.getInstance(document, new FileOutputStream(filePath));
                    document.open();

                    // Font hỗ trợ tiếng Việt
                    BaseFont baseFont = BaseFont.createFont("lib/arial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                    Font titleFont = new Font(baseFont, 16, Font.BOLD);
                    Font normalFont = new Font(baseFont, 12, Font.NORMAL);
                    Font totalFont = new Font(baseFont, 12, Font.BOLD);

                    // Tiêu đề phiếu nhập hàng
                    Paragraph title = new Paragraph("CỬA HÀNG THỰC PHẨM\nPhiếu Nhập Hàng", titleFont);
                    title.setAlignment(Element.ALIGN_CENTER);
                    document.add(title);

                    document.add(Chunk.NEWLINE);

                    // Thông tin phiếu nhập hàng
                    document.add(new Paragraph("Mã phiếu: " + maPhieu, normalFont));
                    document.add(new Paragraph("Ngày nhập: " + thoiGian, normalFont));
                    document.add(new Paragraph("Nhân viên nhập: " + maNV, normalFont));
                    document.add(new Paragraph("Nhà cung cấp: " + maNCC, normalFont));

                    document.add(Chunk.NEWLINE);

                    // Bảng danh sách sản phẩm nhập
                    PdfPTable tablePDF = new PdfPTable(4);
                    tablePDF.setWidthPercentage(100);
                    tablePDF.setSpacingBefore(10f);
                    tablePDF.setSpacingAfter(10f);

                    // Tiêu đề cột
                    String[] headers = {"Mã hàng", "Tên sản phẩm", "Số lượng", "Đơn giá"};
                    for (String header : headers) {
                        PdfPCell cell = new PdfPCell(new Phrase(header, normalFont));
                        cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
                        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                        tablePDF.addCell(cell);
                    }

                    // Dữ liệu chi tiết nhập hàng
                    for (ChiTietNhapHangDTO ctnh : dsCTNH) {
                        HangDTO hang = HangBLL.timHang(ctnh.getMaHang());

                        tablePDF.addCell(new PdfPCell(new Phrase(ctnh.getMaHang(), normalFont)));
                        tablePDF.addCell(new PdfPCell(new Phrase(hang.getTenSP(), normalFont)));
                        tablePDF.addCell(new PdfPCell(new Phrase(String.valueOf(ctnh.getSoLuong()), normalFont)));
                        tablePDF.addCell(new PdfPCell(new Phrase(String.format("%,.0f VNĐ", (double) ctnh.getDonGia()), normalFont)));
                    }

                    document.add(tablePDF);

                    // Tổng tiền
                    Paragraph total = new Paragraph("Tổng tiền: " + tongTien + " VNĐ", totalFont);
                    total.setAlignment(Element.ALIGN_RIGHT);
                    document.add(total);

                    // Đóng tài liệu
                    document.close();

                    JOptionPane.showMessageDialog(this, "Xuất file PDF thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi tạo PDF: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một phiếu nhập hàng để in PDF!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnExportPDFMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnDelete;
    private javax.swing.JLabel btnExportPDF;
    private javax.swing.JLabel btnInsert;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel btnUpdate;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> cbbSortOption;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton searchOption_ma;
    private javax.swing.JRadioButton searchOption_ncc;
    private javax.swing.JRadioButton searchOption_nv;
    private javax.swing.JTable table;
    private javax.swing.JTable tbChiTietNhapHang;
    private javax.swing.JTextField txtKeyWord;
    private javax.swing.JTextField txtMaNCC;
    private javax.swing.JTextField txtMaNH;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JLabel txtResultCount;
    private javax.swing.JTextField txtThoiGian;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
